/* globals.css */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base styles */
@layer base {
  :root {
    --background: 15 23 42; /* #0f172a - slate-900 */
    --foreground: 148 163 184; /* #94a3b8 - slate-400 */
    --primary: 94 234 212; /* #5eead4 - teal-300 */
    --primary-foreground: 19 78 74; /* #134e4a - teal-900 */
    --muted: 30 41 59; /* #1e293b - slate-800 */
    --muted-foreground: 100 116 139; /* #64748b - slate-500 */
    --border: 51 65 85; /* #334155 - slate-700 */
  }

  html {
    font-family: 'Inter', sans-serif;
    scroll-behavior: smooth; /* Keep smooth scrolling here */
    /* Removed: cursor: none !important; */
  }

  body {
    /* @apply bg-background text-foreground; */
    /* The below lines apply the same as the @apply directive if your custom properties are set correctly.
       Keeping them explicit can sometimes help if the @apply is not processed perfectly, or for fallbacks.
       However, if you're strictly using Tailwind's system, @apply is sufficient.
       I'll keep them as they don't cause harm and ensure the background/text colors are applied. */
    background-color: rgb(var(--background));
    color: rgb(var(--foreground));
  }
}

/* Components */
@layer components {
  /* Nav indicator styles */
  .nav-indicator {
    @apply mr-4 h-px w-8 bg-slate-600 transition-all group-hover:w-16 group-hover:bg-slate-200 group-focus-visible:w-16 group-focus-visible:bg-slate-200 motion-reduce:transition-none;
  }

  .nav-text {
    @apply text-xs font-bold uppercase tracking-widest text-slate-500 group-hover:text-slate-200 group-focus-visible:text-slate-200;
  }

  /* Active nav item */
  .nav .active .nav-indicator {
    @apply w-16 bg-slate-200;
  }

  .nav .active .nav-text {
    @apply text-slate-200;
  }

  /* Selection styles */
  ::selection {
    @apply bg-teal-300 text-teal-900;
  }

  /* Focus styles */
  a:focus-visible, button:focus-visible {
    @apply outline-none ring-2 ring-teal-300 ring-offset-2 ring-offset-slate-900;
  }

  /* Skip link styles */
  .skip-link {
    @apply absolute left-0 top-0 block -translate-x-full rounded bg-gradient-to-br from-teal-400 via-blue-500 to-purple-600 px-4 py-3 text-sm font-bold uppercase tracking-widest text-white focus-visible:translate-x-0;
  }
}

/* Utilities */
@layer utilities {
  /* Removed all cursor-related styles and keyframes */
  /*
  .cursor-dot {
    width: 8px;
    height: 8px;
    background-color: white;
    mix-blend-mode: difference;
  }

  .cursor-outline {
    width: 32px;
    height: 32px;
    border: 2px solid white;
    mix-blend-mode: difference;
    transition: all 0.1s ease-out;
  }

  .cursor-dot,
  .cursor-outline {
    position: fixed;
    top: 0;
    left: 0;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
  }

  .cursor-transition {
    transition: transform 0.15s ease-out, width 0.2s ease-out, height 0.2s ease-out;
  }

  @keyframes cursorAnim2 { ... }
  @keyframes cursorAnim3 { ... }
  */

  .text-body {
    @apply text-slate-400 leading-relaxed;
    font-size: 1.0625rem; /* 17px */
    line-height: 1.75; /* 28px */
  }

  .text-body p {
    @apply mb-4;
  }

  .text-body a {
    @apply font-medium text-slate-200 hover:text-teal-300 focus-visible:text-teal-300;
  }

  /* These are redundant if already defined in :root and applied via @apply,
     but they explicitly set the colors based on the CSS variables.
     They don't cause issues if the variables are correctly defined. */
  .bg-background {
    background-color: rgb(var(--background));
  }

  .text-foreground {
    color: rgb(var(--foreground));
  }

  .border-border {
    border-color: rgb(var(--border));
  }

  /* Scrollbar styles */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgb(var(--muted));
  }

  ::-webkit-scrollbar-thumb {
    background: rgb(var(--border));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgb(var(--muted-foreground));
  }
}